@startuml

class Campus{
  -ArrayList<Location> locations
  -ArrayList<User> students
  -Arraylist<AdminUser> admins
}

  class User{
    ..personal info of user..
    -String name
    -Room room
    -String biography
    -String email
    -String password
    -Image profilePicture
    -Major
    
    ..relations with other users and content..
    -ArrayList<User> friends
    -ArrayList<Post> liked
    -ArrayList<EventPost> followedEvents
    -ArrayList<friendRequest> pendingIncomingRequests
    -ArrayList<friendRequest> pendingRequests
    
    
    +void post(Post p)
    +ArrayList<User> getFriends()
    +void unFriendWith(User f)
    +void friendRequestTo(User f)
    +void display()
    +boolean isValidLogin(String email, String pass)
  }

interface Reviewable
{
  Shops, activities, dorms, 
  users may implement this
  + addReview()
  - ArrayList<Review> reviews
}

package location{
  
  abstract class Location implements .Reviewable
  {
    - String name
    - String description
    - double rating
  }
  
  package cafeteria
  {
    class Cafeteria extends location.Location
    {
      - Menu menu
      - priceRange
    }
    class Menu
    {
      - ArrayList<MenuItem> items
      + void addItem(MenuItem item)
      + void removeItem(MenuItem item)
    }
    
    class MenuItem
    {
      - String name
      - double price
    }
  }
  
  class Dormitory extends Location
  {
    -Room[] rooms
    -boolean isEast
    +int[] checkAvailability() 
    +void addStudent(Room r)
  }
  
  class Room
  {
    -final int roomNo
    -final int capacity
    -int availableBed
    -boolean isBunked
    -boolean privateBathroom
    -final Dormitory dorm
    -boolean checkAvailability()
  }
  
  Dormitory "1" *-- "many" Room : contains
  
}
Campus "1" *-- "many" Location : contains
Campus "1" *-- "many" User : contains


class friendRequest
{
  - Status
  - User sender
  - User receiver
}


package userContent
{
  abstract class UserContentItem 
  {
    - String description
    - final Date date 
    ** Java Date Class **
    - final User owner
    __
    + void edit(String description)
    use setDate() internally to 
    show last edit date
  }
  
  package post
  {

    abstract class Post extends userContent.UserContentItem
    {
      - String heading
      - int likeCount
      - ArrayList<Answer> answers
      - ArrayList<File> attachments
      __
      @Overload
      + void edit(String heading,
      String Description)
      + void likeBy(User user)
    }
    
    class ForumPost extends Post
    {
      - ArrayList<Tags> tags
      - ArrayList<Answer> answers
      + void addAnswer()
    }
    class DormTransferPost extends Post
    {
      - Room room
      
    }
    
    class EventPost extends Post
    {
      - Location loc
      - Date eventDate
      - String importantInfo
      
      + void follow()
    }
    
  }
  
  class Message extends UserContentItem
  {
    - User receiver
  }
  
  class Review extends UserContentItem
  {
    - Reviewable r
  }
  
  class Answer extends UserContentItem
  {
    - Post previous
      
  }
}

@enduml
