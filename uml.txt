@startuml

class University
{
  + University(String name, ArrayList<Campus> campuses)
  + University(String name,
              ArrayList<Campus> campuses, ArrayList<User> students)
  __
  - int universityId
  - String name
  -ArrayList<Campus> campuses
  -ArrayList<User> students
}

class User{
  + User(String name, String email, String password, String major, String biography, int roomId)
  + User(int id, String name, String email, String password, String major, String biography, int roomId)
  __
  -int userId
  ..personal info of user..
  -String name
  -int roomId
  -String biography
  -String email
  -String password
  -String profilePicturePath
  -String major
  
  ..relations with other users and content..
  -ArrayList<User> friends
  -ArrayList<ForumPost> liked
  -ArrayList<EventPost> followedEvents
  -ArrayList<FriendRequest> pendingIncomingRequests
  -ArrayList<FriendRequest> pendingRequests
  -ArrayList<Post> postsOwned
  
  
  ..adders and removers for above arraylists..
}

class Campus
{
  + Campus(String name)
  __
  - int campusId
  - String name
  - ArrayList<Dormitory> dormitories
  - ArrayList<Cafeteria> cafeterias
}

interface Reviewable
{
  + addReview()
}

package location{
  
  abstract class Location implements .Reviewable
  {
    + Location(String name, String description, Campus campus)
    + Location(String name, String description, Campus campus, String imagePath)
    __
    - int locationId
    - ArrayList<Review> reviews
    - String imagePath
    - String name
    - String description
    - double rating    
    - Campus campus
    + void addReview(Review r)
    + void removeReview(Review r)
  }
  
  package cafeteria
  {
    class Cafeteria extends location.Location
    {
      + Cafeteria (int id, ArrayList<Review> revs,
                      String imagePath, String name, String desc,
                      double rate, Campus campus, ArrayList<MenuItem> items,
                      double minPrice, double maxPrice)
      __
      - double minPrice
      - double maxPrice
      - ArrayList<MenuItem> items

    }
    
    class MenuItem
    {
      + MenuItem(String name, double price)
      __
      - int menuItemId
      - String name
      - double price
    }
  }
  
  class Dormitory extends Location
  {
    + Dormitory (int id, ArrayList<Review> revs, String imagePath,
      String name, String description, double rate, Campus campus, ArrayList<Room> rooms)
    __
    - ArrayList<Room> rooms
  }
  
  class Room
  {
    Room(int id, int capacity, boolean bunk, boolean bathroom, String desc, int dormitoryID)
    __
    - int roomId
    - int capacity
    - int dormitoryId
    - int availableBed
    - boolean isBunk
    - boolean privateBathroom
    
  }
  
}

class FriendRequest
{
  + FriendRequest(User sender, User, reciever)
  __
  - int friendRequestId
  - int senderId
  - int receiverId
  + void acceptRequest()
  + void rejectRequest()
}


package userContent
{
  abstract class UserContentItem 
  {
    + UserContentItem(int ownerId, String text, Date creation, Date lastEdit)
    + UserContentItem(int id, int ownerId, String text, Date creation, Date lastEdit)
    __
    - final Date creationDate
    - int userContentItemId
    - String mainText
    - Date lastEditDate
    - final int ownerId
    __
    + void edit(String newText)
    use setDate() internally to 
    show last edit date
    + void delete()
    
  }
  
  package post
  {
    abstract class Post extends userContent.UserContentItem
    {
      + Post(int ownerId, String text, Date creation, Date lastEdit, String heading)
      + Post(int id, int ownerId, String text, Date creation, Date lastEdit, String heading)
      __
      - String heading
      __
      @Overload
      + void edit(String heading,
      String description)
      
    }
    
    class ForumPost extends Post
    {
      + ForumPost(int id, int ownerId, String text, Date creation, 
                Date lastEdit, String heading,
                ArrayList<Reply> replies, ArrayList<User> likedBy)
      + ForumPost(int id, int ownerId, String text, Date creation, 
                Date lastEdit, String heading)
      + ForumPost(int ownerId, String text, Date creation, 
                Date lastEdit, String heading)
      __
      - int likeCount
      - ArrayList<Reply> replies
      - ArrayList<User> likedBy
      + void addReply(Reply r)
      + void removeReply(Reply r)
      + void likeBy(User user)
      + void removeLike(User user)
    
    }
    class DormTransferPost extends Post
    {
      + DormTransferPost(int ownerId, String text, Date creation, 
                  Date lastEdit, String heading, int roomId)
      + DormTransferPost(int id, int ownerId, String text, 
               Date creation, Date lastEdit, String heading, int roomId)
      __
      - int roomId
    }
    
    class EventPost extends Post
    {
      + EventPost(int ownerId, String text, Date creation, 
            Date lastEdit, String heading, String location, Date eventDate)
      + EventPost(int id, int ownerId, String text, Date creation, 
            Date lastEdit, String heading, String location, Date eventDate)
      __
      - String location
      - Date eventDate
      - ArrayList<User> followers
      
      + void addFollower(User u)
      + void removeFollower(User u)
      + void notifyFollowers()
    }
    
    
  }
  
  class Message extends UserContentItem
  {
    + Message(int senderId, int receiverId, String text)
    + Message(int id, int senderId, int receiverId, String text)
    __
    - int receiverId
  }
  
  class Review extends UserContentItem
  {
    + Review(int ownerId, String text, Date creation, Date lastEdit, 
              int rId, double rateGiven)
    + Review(int id, int own, String text, Date creation, Date lastEdit, 
              int rId, double rateGiven)
    __
    - int reviewableId
    - double rateGiven
    + void edit(String newText, double newRating)
  }
  
  class Reply extends UserContentItem
  {
    + Reply(int ownerId, String commentContent, Date creation, 
              Date lastEdit, int postId)
    + Reply(int id, int own, String commentContent, Date creation, 
              Date lastEdit, int toPost)
    __
    - int postId
  }
}

University *-- Campus
University *-- User
Campus *-- Cafeteria
Campus *-- Dormitory
Cafeteria *-- MenuItem
FriendRequest *-- User
ForumPost *-- Reply
Location o-- Review
Dormitory *-- Room
User *-- Post



@enduml